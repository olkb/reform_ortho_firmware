name: Build

permissions:
  contents: read

on:
  push:
    branches: main

jobs:
  build:
    runs-on: ubuntu-latest
    container: ghcr.io/qmk/qmk_base_container

    steps:
    - uses: actions/checkout@v3
      # with:
      #   submodules: recursive
      #   ref: ${{ github.event.inputs.branch || github.ref }}

    - name: 'Restore qmk_firmware from cache'
      id: cache-qmk_firmware-restore
      uses: actions/cache/restore@v3
      with:
        path: |
          qmk_firmware
        key: qmk_firmware

    - name: 'Checkout qmk_firmware'
      if: steps.cache-qmk_firmware-restore.outputs.cache-hit != 'true'
      run: git submodule update --init --recursive

    # - run: |
    #     echo 'QMK_JSON<<EOF' >> $GITHUB_ENV
    #     cat ./qmk.json >> $GITHUB_ENV
    #     echo 'EOF' >> $GITHUB_ENV
    # - run: |
    #     echo '${{ fromJson(env.QMK_JSON).qmk_version }}'

    - name: 'Save qmk_firmware to cache'
      id: cache-qmk_firmware-save
      uses: actions/cache/save@v3
      with:
        path: |
          qmk_firmware
        key: ${{ steps.cache-qmk_firmware-restore.outputs.cache-primary-key }}

    - name: 'Checkout qmk_cli'
      uses: actions/checkout@v3
      with:
        repository: jackhumbert/qmk_cli
        ref: exodus_experiments
        path: qmk_cli
    
    - name: 'Install dependencies'
      run: pip3 install -r qmk_firmware/requirements.txt

    - name: 'Compile default keymap'
      run: ./qmk_cli/qmk compile -kb reform_ortho/reform_ortho -km default

    - name: 'Upload artifacts'
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: artifacts-${{ github.event.inputs.branch || github.ref_name }}
        if-no-files-found: ignore
        path: |
          *.bin
          *.hex
          *.uf2
          .build/failed.*