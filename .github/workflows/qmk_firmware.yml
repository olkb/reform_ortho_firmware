name: QMK Firmware

permissions:
  contents: read

on:
  push:
    branches: main

jobs:
  qmk_firmware:
    runs-on: ubuntu-latest
    container: ghcr.io/qmk/qmk_base_container

    steps:
    - uses: actions/checkout@v3
      # with:
      #   submodules: recursive
      #   ref: ${{ github.event.inputs.branch || github.ref }}

      # - run: |
      #     echo 'QMK_JSON<<EOF' >> $GITHUB_ENV
      #     cat ./qmk.json >> $GITHUB_ENV
      #     echo 'EOF' >> $GITHUB_ENV
      # - run: |
      #     echo '${{ fromJson(env.QMK_JSON).qmk_version }}'

    - name: 'Set qmk_firmware version'
      run: |
        git config --global --add safe.directory /__w/reform_ortho_firmware/reform_ortho_firmware
        echo "QMK_FIRMWARE_VERSION=$(git submodule status qmk_firmware | awk '{print $1}')" >> $GITHUB_ENV

    - name: 'Restore qmk_firmware from cache'
      id: cache-qmk_firmware-restore
      uses: actions/cache/restore@v3
      with:
        path: |
          qmk_firmware
        key: qmk_firmware-${{ env.QMK_FIRMWARE_VERSION }}

    - name: 'Checkout qmk_firmware'
      if: steps.cache-qmk_firmware-restore.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        submodules: recursive
      # run: git submodule update --init --recursive

    - name: 'Save qmk_firmware to cache'
      if: steps.cache-qmk_firmware-restore.outputs.cache-hit != 'true'
      id: cache-qmk_firmware-save
      uses: actions/cache/save@v3
      with:
        path: |
          qmk_firmware
        key: ${{ steps.cache-qmk_firmware-restore.outputs.cache-primary-key }}

    - name: 'Checkout qmk_cli'
      uses: actions/checkout@v3
      with:
        repository: jackhumbert/qmk_cli
        ref: exodus_experiments
        path: qmk_cli
    
    - name: 'Install dependencies'
      run: pip3 install -r qmk_firmware/requirements.txt

    - name: 'Compile default keymaps'
      id: compile
      run: ./qmk_cli/qmk module-compile -e SKIP_VERSION=true

    - name: 'Upload artifacts'
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: artifacts-${{ github.event.inputs.branch || github.ref_name }}
        if-no-files-found: ignore
        path: |
          *.bin
          *.hex
          *.uf2
          .build/failed.*
  badge:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # To push a branch 
    needs: qmk_firmware
    if: ${{ always() }}
    steps:
    - name: 'Version Badge'
      uses: RubbaBoy/BYOB@v1.3.0
      with:
        NAME: qmk_version
        LABEL: 'Î¨ v0.20.10'
        STATUS: ${{ jobs.qmk_firmware.result }}
        COLOR: ${{ jobs.qmk_firmare.result == 'success' && '16c964' || 'red' }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}